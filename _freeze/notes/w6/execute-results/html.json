{
  "hash": "ceb05e528081dd3426926407bd36d5ff",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Lecture Note Week 6\"\nfilters: \n  - webr\nexecute: \n  echo: false\n---\n\n\n\n\n\n::: callout-note\nLearning Objective:\n\nLO1: Understand events and probabilities\n\nLO2: Understand the concept of random variables and probability distributions\n\nLO3: Understand the concept of sampling distributions\n\nLO4: Understand and able to identify discrete probability distributions\n\nLO5: Understand and able to identify continuous probability distributions\n:::\n\n\n\n\n\n\n\n\n\n\n\n## \n\n## Section 1: Introduction to R Language\n\n### What is R?\n\nR is a programming language and free software environment for statistical computing and graphics supported by the R Foundation for Statistical Computing. The R language is widely used among statisticians and data miners for developing statistical software and data analysis.\n\n### Why R?\n\n-   R is open-source and free\n-   R is a powerful tool for data analysis\n-   R has a large and active community\n-   R has a large number of packages for data analysis\n-   R is a programming language and can be used for automating data analysis tasks\n-   R is a great tool for reproducible research\n\n### RStudio\n\nRsudio is an integrated development environment (IDE) for R. It includes a console, syntax-highlighting editor that supports direct code execution, as well as tools for plotting, history, debugging and workspace management.\n\n## Section 2: Modeling Uncertainty\n\nUncertainty is a fundamental concept in many fields, including statistics, economics, engineering, and everyday decision-making. It refers to the state of having limited knowledge about an event, outcome, or condition. This lack of certainty means that we cannot predict the outcome with complete confidence.\n\n**Probability and Uncertainty:**\n\nProbability is a mathematical framework used to quantify uncertainty. It provides a way to measure how likely an event is to occur. Here are some key concepts:\n\n1.  **Probability of an Event:** The probability of an event AAA, denoted as P(A)P(A)P(A), ranges from 0 (the event will not occur) to 1 (the event will certainly occur). For example, the probability of flipping a fair coin and getting heads is P(Heads)=0.5P(\\text{Heads}) = 0.5P(Heads)=0.5.\n\n2.  **Random Variables:** A random variable is a variable whose possible values are numerical outcomes of a random phenomenon. For example, the number of heads in 10 coin tosses is a random variable.\n\n3.  **Probability Distributions:** A probability distribution describes how the probabilities are distributed over the values of the random variable. Common distributions include the binomial distribution (for binary outcomes), the normal distribution (for continuous outcomes), and the Poisson distribution (for count data).\n\n### 5.1 Random Experiment and Sample Space\n\n#### Definition of a Random Experiment\n\nA random experiment is a process or procedure that leads to one of several possible outcomes, where the outcome cannot be predicted with certainty beforehand. Each performance of the experiment is independent and can yield any of the possible outcomes.\n\n#### Characteristics of a Random Experiment\n\n1.  **Uncertainty**: The outcome of the experiment cannot be determined with certainty before it is conducted.\n\n2.  **Repeatability**: The experiment can be repeated under identical conditions.\n\n3.  **Well-defined Outcomes**: All possible outcomes are known and can be listed.\n\n#### Sample Space\n\nThe sample space, denoted by SSS, of a random experiment is the set of all possible outcomes of that experiment. Each possible outcome in the sample space is known as a sample point or an elementary event.\n\n#### Examples of Random Experiments and Sample Spaces\n\n**Example 1: Tossing a Coin**\n\n-   **Random Experiment**: Tossing a coin.\n\n-   **Possible Outcomes (Sample Points)**: The coin can land on either Head (H) or Tail (T).\n\n-   **Sample Space**: The sample space for this experiment is: S={Head,Tail}S = { \\text{Head}, \\text{Tail} }S={Head,Tail}\n\n**Example 2: Rolling a Die**\n\n-   **Random Experiment**: Rolling a six-sided die.\n\n-   **Possible Outcomes (Sample Points)**: The die can land on any one of the six faces, showing 1, 2, 3, 4, 5, or 6.\n\n-   **Sample Space**: The sample space for this experiment is: S={1,2,3,4,5,6}S = { 1, 2, 3, 4, 5, 6 }S={1,2,3,4,5,6}\n\n#### Further Examples and Concepts\n\n**Example 3: Drawing a Card from a Deck**\n\n-   **Random Experiment**: Drawing a single card from a standard 52-card deck.\n\n-   **Possible Outcomes (Sample Points)**: Each card in the deck is a distinct outcome, such as Ace of Spades, 2 of Hearts, etc.\n\n-   **Sample Space**: The sample space for this experiment is: S={Ace of Spades,2 of Hearts,…,King of Clubs}S = { \\text{Ace of Spades}, \\text{2 of Hearts}, \\ldots, \\text{King of Clubs} }S={Ace of Spades,2 of Hearts,…,King of Clubs} Here, SSS contains 52 elements, representing each card in the deck.\n\n**Example 4: Flipping Two Coins**\n\n-   **Random Experiment**: Flipping two coins simultaneously.\n\n-   **Possible Outcomes (Sample Points)**: The outcomes can be both heads, both tails, head on the first coin and tail on the second, or tail on the first coin and head on the second.\n\n-   **Sample Space**: The sample space for this experiment is: $S={(Head, Head),(Head, Tail),(Tail, Head),(Tail, Tail)}S = \\{ (\\text{Head, Head}), (\\text{Head, Tail}), (\\text{Tail, Head}), (\\text{Tail, Tail}) \\}$={(Head, Head),(Head, Tail),(Tail, Head),(Tail, Tail)}\n\n**Example 5: Rolling Two Dice**\n\n-   **Random Experiment**: Rolling two six-sided dice simultaneously.\n\n-   **Possible Outcomes (Sample Points)**: Each die can show a number from 1 to 6, resulting in pairs such as (1,1), (1,2), ..., (6,6).\n\n-   **Sample Space**: The sample space for this experiment is: S={(1,1),(1,2),…,(6,6)}S = { (1,1), (1,2), \\ldots, (6,6) }S={(1,1),(1,2),…,(6,6)} Here, SSS contains 36 elements, representing each possible pair of outcomes.\n",
    "supporting": [
      "w6_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}