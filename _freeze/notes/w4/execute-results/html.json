{
  "hash": "cecd6bd5ffa3d718cbce550d5a58ab48",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Lecture Note Week 4\"\nfilters: \n  - webr\nexecute: \n  echo: false\n---\n\n\n\n::: callout-note\nLearning Objective:\n\n-   Be able to use visual principles such as preattentive attributes and the data-ink ratio to enhance chart design.\n\n-   Be able to create and use PivotTables and PivotCharts in Power BI to explore and analyze data.\n\n-   Be able to create and interpret scatter charts, line charts, bar charts, and column charts to examine relationships between variables.\n\n-   Be able to create and interpret advanced visualizations such as trendlines, sorted/clustered/stacked bar charts, bubble charts, scatter chart matrices, and table lenses.\n\n-   Be able to design and create effective data dashboards in Power BI for real-time data analysis and decision-making.\n:::\n\n\n\n\n\n\n\n## Data Visualization with Power BI\n\n![](images/plotoption.png)\n\n### 1. PivotTables\n\n**Purpose**:\n\n-   **PivotTables**: Summarize, analyze, explore, and present summary data.\n\n-   **PivotCharts**: Visualize the data from PivotTables.\n\n**Creating PivotTables in Power BI**:\n\n1.  **Import Data**: Load your dataset into Power BI.\n\n    -   Go to `Home > Get Data > Excel` (or choose your data source).\n\n    -   Select your file and click `Load`.\n\n2.  **Create PivotTable**:\n\n    -   Go to `Visualization > Build Visual > Choose Table`.\n\n3.  **Visualize Data**:\n\n    -   Drag fields into Rows, Columns, and Values areas in the Visualizations pane.\n\n    -   Adjust the fields to refine your table.\n\n### 2. Scatter Charts\n\n**Purpose**: Examine relationships between two variables.\n\n**Creating Scatter Charts in Power BI**:\n\n1.  **Select Scatter Chart**:\n\n    -   Go to the `Visualizations` pane.\n\n    -   Click on the Scatter Chart icon.\n\n2.  **Add Data Fields**:\n\n    -   Drag numerical fields to the X-axis and Y-axis.\n\n    -   Optionally, add a third numerical field to the `Size` field well.\n\n3.  **Customize and Interpret**:\n\n    ![](images/formatvisual.png)\n\n    -   Use the `Format` pane to customize the chart's appearance.\n\n    -   Interpret the relationship between variables by examining the pattern of points.\n\n### 3. Line Charts, Bar Charts, and Column Charts\n\n**Purpose**:\n\n-   **Line Charts**: Show trends over time.\n\n-   **Bar Charts**: Compare quantities across categories.\n\n-   **Column Charts**: Similar to bar charts, but vertical.\n\n**Creating Line Charts in Power BI**:\n\n1.  **Select Line Chart**:\n\n    -   Go to the `Visualizations` pane.\n\n    -   Click on the Line Chart icon.\n\n2.  **Add Data Fields**:\n\n    -   Drag a date field to the X-axis and a numerical field to the Y-axis.\n\n**Creating Bar and Column Charts in Power BI**:\n\n1.  **Select Bar/Column Chart**:\n\n    -   Go to the `Visualizations` pane.\n\n    -   Click on the Bar Chart or Column Chart icon.\n\n2.  **Add Data Fields**:\n\n    -   Drag a categorical field to the Axis area and a numerical field to the Values area.\n\n### 4. Sorted, Clustered, and Stacked Bar (Column) Charts\n\n**Purpose**:\n\n-   **Sorted Bar/Column Charts**: Rank data in ascending or descending order.\n\n-   **Clustered Bar/Column Charts**: Compare multiple categories across a single axis.\n\n-   **Stacked Bar/Column Charts**: Show composition and compare totals.\n\n**Creating Sorted Bar/Column Charts**:\n\n1.  **Sort Data**:\n\n    -   Click on the ellipsis (...) in the top right corner of the chart.\n\n    -   Select `Sort axis` and choose the desired field.\n\n**Creating Clustered Bar/Column Charts**:\n\n1.  **Select Clustered Chart**:\n\n    -   Go to the `Visualizations` pane.\n\n    -   Click on the Clustered Bar Chart or Clustered Column Chart icon.\n\n2.  **Add Data Fields**:\n\n    -   Drag multiple categorical fields to the Axis area and a numerical field to the Values area.\n\n**Creating Stacked Bar/Column Charts**:\n\n1.  **Select Stacked Chart**:\n\n    -   Go to the `Visualizations` pane.\n\n    -   Click on the Stacked Bar Chart or Stacked Column Chart icon.\n\n2.  **Add Data Fields**:\n\n    -   Drag a categorical field to the Axis area and another categorical field to the Legend area.\n\n### 5. Bubble Charts\n\n**Purpose**:\n\n-   **Bubble Charts**: Visualize three dimensions of data.\n\n**Creating Bubble Charts in Power BI**:\n\n1.  **Select Bubble Chart**:\n\n    -   Go to the `Visualizations` pane.\n\n    -   Click on the Scatter Chart icon and add a field to the `Size` well.\n\n2.  **Add Data Fields**:\n\n    -   Drag fields to the X-axis, Y-axis, and Size areas.\n\n### 6. Advanced Visualization Types\n\n**Purpose**:\n\n-   **Heat Maps**: Show data density or intensity.\n\n-   **Sparklines**: Show trends in a small space.\n\n-   **Treemaps**: Visualize hierarchical data.\n\n-   **Waterfall Charts**: Show cumulative effects.\n\n-   **Stock Charts**: Display financial data.\n\n-   **Parallel Coordinates Plots**: Visualize multi-dimensional data.\n\n**Creating Heat Maps in Power BI**:\n\n1.  **Select Heat Map**:\n\n    -   Use the Shape Map visual in the `Visualizations` pane.\n\n2.  **Add Data Fields**:\n\n    -   Drag fields to the Location and Value areas.\n\n**Creating Sparklines in Power BI**:\n\n1.  **Add Sparklines**:\n\n    -   Go to `Visualizations` pane.\n\n    -   Use the `Line and clustered column chart` visual.\n\n2.  **Add Data Fields**:\n\n    -   Drag fields to the Line Values area.\n\n**Creating Treemaps in Power BI**:\n\n1.  **Select Treemap**:\n\n    -   Go to the `Visualizations` pane.\n\n    -   Click on the Treemap icon.\n\n2.  **Add Data Fields**:\n\n    -   Drag hierarchical fields to the Group and Values areas.\n\n**Creating Waterfall Charts in Power BI**:\n\n1.  **Select Waterfall Chart**:\n\n    -   Go to the `Visualizations` pane.\n\n    -   Click on the Waterfall Chart icon.\n\n2.  **Add Data Fields**:\n\n    -   Drag fields to the Category and Y-axis areas.\n\n\n### 7. Geospatial Data Visualization\n\n**Purpose**:\n\n-   **Choropleth Maps**: Visualize data across geographical regions.\n\n-   **Cartograms**: Distort map shapes to represent data values.\n\n**Creating Choropleth Maps in Power BI**:\n\n1.  **Select Map**:\n\n    -   Go to the `Visualizations` pane.\n\n    -   Click on the Map or Filled Map icon.\n\n2.  **Add Data Fields**:\n\n    -   Drag geographical fields to the Location area and data fields to the Values area.\n\n\n## Data Visualization with R\n\n#### 1. Introduction to Base Plotting in R\n\nBase R provides a powerful system for creating a wide range of visualizations without the need for additional packages. While `ggplot2` and other libraries have gained popularity, base plotting remains an essential tool due to its simplicity, speed, and integration with the rest of R's functionality.\n\n#### **2. Basic Plot Types**\n\n-   **Scatter Plot (`plot`)**\n\n    -   The `plot()` function is versatile and can create different types of plots depending on the input data. It's most commonly used for scatter plots.\n\n    ```{webr-r}\n    # Scatter plot\n    x <- rnorm(100)\n    y <- rnorm(100)\n    plot(x, y, main = \"Scatter Plot\", xlab = \"X Axis\", ylab = \"Y Axis\")\n    ```\n\n-   **Line Plot (`plot` with type = \"l\")**\n\n    -   Setting `type = \"l\"` in the `plot()` function produces a line plot.\n\n    ```{webr-r}\n       # Line plot\n    plot(x, type = \"l\", main = \"Line Plot\", xlab = \"Index\", ylab = \"Values\")\n    ```\n\n-   **Histogram (`hist`)**\n\n    -   The `hist()` function creates a histogram, useful for visualizing the distribution of a dataset.\n\n    ```{webr-r}\n    # Histogram\n    data <- rnorm(1000)\n    hist(data, breaks = 30, main = \"Histogram\", xlab = \"Values\")\n    ```\n\n-   **Boxplot (`boxplot`)**\n\n    -   The `boxplot()` function provides a visualization of the distribution of data across different categories.\n\n    ```{webr-r}\n    # Boxplot\n    data <- list(A = rnorm(100), B = rnorm(100, 1), C = rnorm(100, 2))\n    boxplot(data, main = \"Boxplot\", ylab = \"Values\")\n    ```\n\n-   **Barplot (`barplot`)**\n\n    -   The `barplot()` function is used to create bar charts.\n\n    ```{webr-r}\n    # Barplot\n    counts <- table(mtcars$cyl)\n    barplot(counts, main = \"Barplot of Car Cylinders\", xlab = \"Number of Cylinders\", ylab = \"Frequency\")\n    ```\n\n#### **3. Customizing Plots**\n\n-   **Titles and Labels**\n\n    -   You can add titles, axis labels, and customize them using `main`, `xlab`, and `ylab` arguments.\n\n    ```{webr-r}\n    mtcars\n    plot(mtcars$wt, mtcars$mpg, main = \"Miles per Gallon vs. Weight\", xlab = \"Weight\", ylab = \"Miles per Gallon\")\n    ```\n\n-   **Colors and Point Types**\n\n    -   Customize the appearance of points and lines using arguments like `col`, `pch`, and `lty`.\n\n    ```{webr-r}\n    plot(mtcars$wt, mtcars$mpg, col = \"blue\", pch = 16, main = \"Colored Scatter Plot\")\n    lines(lowess(mtcars$wt, mtcars$mpg), col = \"red\", lty = 2)\n    ```\n\n-   **Multiple Plots**\n\n    -   You can create multiple plots in a single window using `par(mfrow = c(nrows, ncols))`.\n\n    ```{webr-r}\n    par(mfrow = c(2, 2))\n    plot(mtcars$wt, mtcars$mpg, main = \"Scatter Plot 1\")\n    plot(mtcars$wt, mtcars$hp, main = \"Scatter Plot 2\")\n    hist(mtcars$mpg, main = \"Histogram\")\n    boxplot(mtcars$mpg, main = \"Boxplot\")\n    ```\n\n-   **Legends**\n\n    -   Add legends using the `legend()` function to describe different elements in your plot.\n\n    ```{webr-r}\n    plot(mtcars$wt, mtcars$mpg, col = mtcars$cyl, pch = 16, main = \"Colored Scatter Plot\")\n    legend(\"topright\", legend = levels(factor(mtcars$cyl)), col = 1:3, pch = 16)\n    ```\n\n#### **4. Advanced Customizations**\n\n-   **Plot Annotations**\n\n    -   Use `text()` to add text annotations to your plots.\n\n    ```{webr-r}\n    plot(mtcars$wt, mtcars$mpg, main = \"Miles per Gallon vs. Weight\", xlab = \"Weight\", ylab = \"Miles per Gallon\")\n    text(5, 30, \"I am here!\", col = \"red\")\n    ```\n\n-   **Axes Customization**\n\n    -   You can control axis limits, labels, and ticks using `xlim`, `ylim`, `axes = FALSE`, and `axis()`.\n\n    ```{webr-r}\n    plot(mtcars$wt, mtcars$mpg, main = \"Miles per Gallon vs. Weight\", xlab = \"Weight\", ylab = \"Miles per Gallon\", axes = FALSE)\n    axis(1, at = seq(2, 4, 1), labels = c(\"Low\", \"Medium\", \"High\"))\n    axis(2, at = seq(10, 35, 5))\n    ```\n\n-   **Adding Gridlines**\n\n    -   Use the `grid()` function to add gridlines to a plot.\n\n    ```{webr-r}\n    plot(mtcars$wt, mtcars$mpg, main = \"Miles per Gallon vs. Weight\", xlab = \"Weight\", ylab = \"Miles per Gallon\")\n    grid()\n    ```\n\n#### **5. Saving Plots**\n\n-   **Saving to File**\n\n    -   Use functions like `pdf()`, `png()`, `jpeg()`, etc., to save plots to files.\n\n    ```{webr-r}\n    # Do not run it here.\n    png(\"plot.png\")\n    plot(x, y)\n    dev.off()  # Close the device to finalize the file`\n    ```\n\n#### 6. Conclusion\n\nBase R plotting is a flexible and powerful tool for creating a wide range of visualizations. While it may lack the more advanced features of libraries like `ggplot2`, its simplicity and speed make it an essential tool for quick data exploration and visualization.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}